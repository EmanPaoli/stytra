language: python
sudo: false
# Credit: Original .travis.yml lifted from PyQtGraph lifted from VisPy

# Here we use anaconda for 2.6 and 3.3, since it provides the simplest
# interface for running different versions of Python. We could also use
# it for 2.7, but the Ubuntu system has installable 2.7 Qt4-GL, which
# allows for more complete testing.
notifications:
  email: false

cache:
  directories:
    - $HOME/mc

env:
  - PYTHON=3.7 QT=pyqt5 TEST=standard

services:
    - xvfb

before_install:
  # We need to create a (fake) display on Travis, let's use a funny resolution
  - wget https://repo.anaconda.com/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh -O anaconda.sh
  - chmod +x anaconda.sh
  - ./anaconda.sh -b -p /home/travis/mc
  - export PATH=/home/travis/mc/bin:$PATH

install:
  - export GIT_FULL_HASH=`git rev-parse HEAD`
  - conda update conda --yes
  - conda create -n test_env python=${PYTHON} --yes
  - source activate test_env
  - conda install coverage --yes
  - conda install numpy scipy numba pyopengl pytest flake8 six coverage --yes
  - conda install ffmpeg --yes
  - conda install -c conda-forge av --yes
  - conda install pyqt --yes;
  - conda install opencv --yes
  - echo ${QT}
  - echo ${TEST}
  - echo ${PYTHON}
  - hash -r

  - which python
  - python --version
  - pwd
  - ls
  - pip install pytest-xdist # multi-thread py.test
  - pip install pytest-cov
  # add coverage stats
  - pip install .

before_script:
  # We need to create a (fake) display on Travis, let's use a funny resolution
  - export DISPLAY=:99.0
  - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render

script:
 - source activate test_env
 - pytest

after_success:
  - pip install coveralls --upgrade  # add another coverage integration service
  - coveralls